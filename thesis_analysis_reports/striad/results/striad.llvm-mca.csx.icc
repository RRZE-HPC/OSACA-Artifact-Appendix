
[0] Code Region

Iterations:        100
Instructions:      1100
Total Cycles:      355
Total uOps:        1900

Dispatch Width:    6
uOps Per Cycle:    5.35
IPC:               3.10
Block RThroughput: 3.2


Instruction Info:
[1]: #uOps
[2]: Latency
[3]: RThroughput
[4]: MayLoad
[5]: MayStore
[6]: HasSideEffects (U)

[1]    [2]    [3]    [4]    [5]    [6]    Instructions:
 2      8     0.50    *                   vmovups	(%rcx,%rax,8), %zmm2
 2      8     0.50    *                   vmovups	64(%rcx,%rax,8), %zmm4
 2      8     0.50    *                   vmovups	(%r14,%rax,8), %zmm1
 2      8     0.50    *                   vmovups	64(%r14,%rax,8), %zmm3
 2      11    0.50    *                   vfmadd213pd	(%r8,%rax,8), %zmm1, %zmm2
 2      11    0.50    *                   vfmadd213pd	64(%r8,%rax,8), %zmm3, %zmm4
 2      1     1.00           *            vmovupd	%zmm2, (%r13,%rax,8)
 2      1     1.00           *            vmovupd	%zmm4, 64(%r13,%rax,8)
 1      1     0.25                        addq	$16, %rax
 1      1     0.25                        cmpq	%r12, %rax
 1      1     0.50                        jb	..B1.41


Resources:
[0]   - SKXDivider
[1]   - SKXFPDivider
[2]   - SKXPort0
[3]   - SKXPort1
[4]   - SKXPort2
[5]   - SKXPort3
[6]   - SKXPort4
[7]   - SKXPort5
[8]   - SKXPort6
[9]   - SKXPort7


Resource pressure per iteration:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    
 -      -     2.49   2.00   3.03   3.03   2.00   2.50   2.01   1.94   

Resource pressure by instruction:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    Instructions:
 -      -     0.47   0.06    -     1.00    -     0.47    -      -     vmovups	(%rcx,%rax,8), %zmm2
 -      -     0.50   0.01   1.00    -      -     0.49    -      -     vmovups	64(%rcx,%rax,8), %zmm4
 -      -     0.01   0.50    -     1.00    -     0.49    -      -     vmovups	(%r14,%rax,8), %zmm1
 -      -     0.49   0.49   1.00    -      -     0.02    -      -     vmovups	64(%r14,%rax,8), %zmm3
 -      -     0.50    -     0.01   0.99    -     0.50    -      -     vfmadd213pd	(%r8,%rax,8), %zmm1, %zmm2
 -      -     0.50    -     0.99   0.01    -     0.50    -      -     vfmadd213pd	64(%r8,%rax,8), %zmm3, %zmm4
 -      -      -      -     0.01   0.01   1.00    -      -     0.98   vmovupd	%zmm2, (%r13,%rax,8)
 -      -      -      -     0.02   0.02   1.00    -      -     0.96   vmovupd	%zmm4, 64(%r13,%rax,8)
 -      -      -      -      -      -      -     0.01   0.99    -     addq	$16, %rax
 -      -     0.01   0.94    -      -      -     0.02   0.03    -     cmpq	%r12, %rax
 -      -     0.01    -      -      -      -      -     0.99    -     jb	..B1.41


Timeline view:
                    0123456789          01234
Index     0123456789          0123456789     

[0,0]     DeeeeeeeeER    .    .    .    .   .   vmovups	(%rcx,%rax,8), %zmm2
[0,1]     DeeeeeeeeER    .    .    .    .   .   vmovups	64(%rcx,%rax,8), %zmm4
[0,2]     D=eeeeeeeeER   .    .    .    .   .   vmovups	(%r14,%rax,8), %zmm1
[0,3]     .DeeeeeeeeER   .    .    .    .   .   vmovups	64(%r14,%rax,8), %zmm3
[0,4]     .D========eeeeeeeeeeeER  .    .   .   vfmadd213pd	(%r8,%rax,8), %zmm1, %zmm2
[0,5]     .D========eeeeeeeeeeeER  .    .   .   vfmadd213pd	64(%r8,%rax,8), %zmm3, %zmm4
[0,6]     . D==================eER .    .   .   vmovupd	%zmm2, (%r13,%rax,8)
[0,7]     . D===================eER.    .   .   vmovupd	%zmm4, 64(%r13,%rax,8)
[0,8]     . DeE-------------------R.    .   .   addq	$16, %rax
[0,9]     . D=eE------------------R.    .   .   cmpq	%r12, %rax
[0,10]    .  D=eE-----------------R.    .   .   jb	..B1.41
[1,0]     .  DeeeeeeeeE-----------R.    .   .   vmovups	(%rcx,%rax,8), %zmm2
[1,1]     .  DeeeeeeeeE-----------R.    .   .   vmovups	64(%rcx,%rax,8), %zmm4
[1,2]     .   DeeeeeeeeE----------R.    .   .   vmovups	(%r14,%rax,8), %zmm1
[1,3]     .   DeeeeeeeeE----------R.    .   .   vmovups	64(%r14,%rax,8), %zmm3
[1,4]     .   D========eeeeeeeeeeeER    .   .   vfmadd213pd	(%r8,%rax,8), %zmm1, %zmm2
[1,5]     .    D=======eeeeeeeeeeeER    .   .   vfmadd213pd	64(%r8,%rax,8), %zmm3, %zmm4
[1,6]     .    D==================eER   .   .   vmovupd	%zmm2, (%r13,%rax,8)
[1,7]     .    D===================eER  .   .   vmovupd	%zmm4, 64(%r13,%rax,8)
[1,8]     .    .DeE------------------R  .   .   addq	$16, %rax
[1,9]     .    .D=eE-----------------R  .   .   cmpq	%r12, %rax
[1,10]    .    .D==eE----------------R  .   .   jb	..B1.41
[2,0]     .    .D=eeeeeeeeE----------R  .   .   vmovups	(%rcx,%rax,8), %zmm2
[2,1]     .    . DeeeeeeeeE----------R  .   .   vmovups	64(%rcx,%rax,8), %zmm4
[2,2]     .    . D=eeeeeeeeE---------R  .   .   vmovups	(%r14,%rax,8), %zmm1
[2,3]     .    . D=eeeeeeeeE---------R  .   .   vmovups	64(%r14,%rax,8), %zmm3
[2,4]     .    .  D========eeeeeeeeeeeER.   .   vfmadd213pd	(%r8,%rax,8), %zmm1, %zmm2
[2,5]     .    .  D========eeeeeeeeeeeER.   .   vfmadd213pd	64(%r8,%rax,8), %zmm3, %zmm4
[2,6]     .    .  D===================eER   .   vmovupd	%zmm2, (%r13,%rax,8)
[2,7]     .    .   D===================eER  .   vmovupd	%zmm4, 64(%r13,%rax,8)
[2,8]     .    .   DeE-------------------R  .   addq	$16, %rax
[2,9]     .    .   D=eE------------------R  .   cmpq	%r12, %rax
[2,10]    .    .   D==eE-----------------R  .   jb	..B1.41
[3,0]     .    .    DeeeeeeeeE-----------R  .   vmovups	(%rcx,%rax,8), %zmm2
[3,1]     .    .    DeeeeeeeeE-----------R  .   vmovups	64(%rcx,%rax,8), %zmm4
[3,2]     .    .    D=eeeeeeeeE----------R  .   vmovups	(%r14,%rax,8), %zmm1
[3,3]     .    .    .DeeeeeeeeE----------R  .   vmovups	64(%r14,%rax,8), %zmm3
[3,4]     .    .    .D========eeeeeeeeeeeER .   vfmadd213pd	(%r8,%rax,8), %zmm1, %zmm2
[3,5]     .    .    .D========eeeeeeeeeeeER .   vfmadd213pd	64(%r8,%rax,8), %zmm3, %zmm4
[3,6]     .    .    . D==================eER.   vmovupd	%zmm2, (%r13,%rax,8)
[3,7]     .    .    . D===================eER   vmovupd	%zmm4, 64(%r13,%rax,8)
[3,8]     .    .    . DeE-------------------R   addq	$16, %rax
[3,9]     .    .    . D=eE------------------R   cmpq	%r12, %rax
[3,10]    .    .    .  D=eE-----------------R   jb	..B1.41


Average Wait times (based on the timeline view):
[0]: Executions
[1]: Average time spent waiting in a scheduler's queue
[2]: Average time spent waiting in a scheduler's queue while ready
[3]: Average time elapsed from WB until retire stage

      [0]    [1]    [2]    [3]
0.     4     1.3    0.3    8.0       vmovups	(%rcx,%rax,8), %zmm2
1.     4     1.0    0.3    8.0       vmovups	64(%rcx,%rax,8), %zmm4
2.     4     1.8    1.3    7.3       vmovups	(%r14,%rax,8), %zmm1
3.     4     1.3    1.0    7.3       vmovups	64(%r14,%rax,8), %zmm3
4.     4     9.0    0.0    0.0       vfmadd213pd	(%r8,%rax,8), %zmm1, %zmm2
5.     4     8.8    0.0    0.0       vfmadd213pd	64(%r8,%rax,8), %zmm3, %zmm4
6.     4     19.3   0.0    0.0       vmovupd	%zmm2, (%r13,%rax,8)
7.     4     20.0   0.0    0.0       vmovupd	%zmm4, 64(%r13,%rax,8)
8.     4     1.0    1.0    18.8      addq	$16, %rax
9.     4     2.0    0.0    17.8      cmpq	%r12, %rax
10.    4     2.5    0.0    16.8      jb	..B1.41
